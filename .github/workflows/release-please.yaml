name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: release-please-action

      - uses: actions/checkout@v3
        name: Checkout OpenAPI specification repository
        with:
          path: gentrace-openapi
        if: ${{ steps.release.outputs.release_created }}
          
      - uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'
          cache: 'yarn'
          cache-dependency-path: gentrace-openapi/yarn.lock
        if: ${{ steps.release.outputs.release_created }}
    
      - uses: actions/checkout@v3
        name: Checkout OpenAPI-generated NodeJS SDK
        with:
          path: gentrace-node
          repository: gentrace/gentrace-node
          token: ${{ secrets.GH_REPO_PAT }}
        if: ${{ steps.release.outputs.release_created }}
        
      - uses: actions/checkout@v3
        name: Checkout OpenAPI-generated browser SDK
        with:
          path: gentrace-browser
          repository: gentrace/gentrace-browser
          token: ${{ secrets.GH_REPO_PAT }}
        if: ${{ steps.release.outputs.release_created }}
          
      - name: Install and generate (OpenAPI)
        run: |
          cd $GITHUB_WORKSPACE/gentrace-openapi
          yarn install
        
          # Assumes that all generated repositories are at relative path "../<original-repo-name>" 
          yarn build
        if: ${{ steps.release.outputs.release_created }}

      - name: Install (NodeJS)
        run: |
          cd $GITHUB_WORKSPACE/gentrace-node
          
          # Installs the necesary Husky commit hooks
          yarn install
          npx lint-staged
        if: ${{ steps.release.outputs.release_created }}

      - name: Get package version
        run: |
          echo "version=$(jq ".version" gentrace-openapi/package.json)" >> $GITHUB_ENV
        if: ${{ steps.release.outputs.release_created }}

      - uses: stefanzweifel/git-auto-commit-action@v4
        name: Commit the automated changes to the Node.JS SDK repository
        with:
          repository: gentrace-node
          token: ${{ secrets.GH_REPO_PAT }}
          branch: openapi-${{ env.version }}
          create_branch: true
          commit_user_name: Gentrace Bot
          commit_user_email: bot@gentrace.ai
          commit_author: Gentrace Bot<bot@gentrace.ai>
          commit_message: |
            chore: updating OpenAI generated NodeJS logic to ${{ env.version }}
        if: ${{ steps.release.outputs.release_created }}
        
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          path: gentrace-node
          token: ${{ secrets.GH_REPO_PAT }}
          title: "chore: updating OpenAI generated NodeJS logic to ${{ env.version }}"
          branch: openapi-${{ env.version }}
          base: main
        if: ${{ steps.release.outputs.release_created }}

      - uses: stefanzweifel/git-auto-commit-action@v4
        name: Commit the automated changes to the browser SDK repository
        with:
          repository: gentrace-browser
          token: ${{ secrets.GH_REPO_PAT }}
          branch: openapi-${{ env.version }}
          create_branch: true
          commit_user_name: Gentrace Bot
          commit_user_email: bot@gentrace.ai
          commit_author: Gentrace Bot<bot@gentrace.ai>
          commit_message: |
            chore: updating OpenAI generated NodeJS logic to ${{ env.version }}
        if: ${{ steps.release.outputs.release_created }}
        
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          path: gentrace-browser
          token: ${{ secrets.GH_REPO_PAT }}
          title: "chore: updating OpenAI generated NodeJS logic to ${{ env.version }}"
          branch: openapi-${{ env.version }}
          base: main
        if: ${{ steps.release.outputs.release_created }}

      - name: Run `openapi` command ðŸš€
        uses: readmeio/rdme@v8
        with:
          rdme: openapi gentrace-openapi/dist/spec-resolved.yaml --key=${{ secrets.README_API_KEY }} --id=6431dd9f738f430042c220a4
        if: ${{ steps.release.outputs.release_created }}
